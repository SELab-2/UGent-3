version: '3.9'

networks:
  selab_network:
    name: selab_network
    driver: bridge
    ipam:
      config:
        - subnet: 192.168.90.0/24

x-common-keys-selab: &common-keys-selab
  networks:
    - selab_network

  env_file:
    - ".env"

services:
  nginx:
    <<: *common-keys-selab
    image: nginx:latest
    container_name: nginx
    ports:
      - 80:80
      - 443:443
    depends_on:
      - frontend
      - backend
      - docs
    volumes:
       - ${DATA_DIR}/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
       - /etc/letsencrypt/:/etc/letsencrypt/:rw 
       - ./certbot/www:/var/www/certbot/:ro
  docs:
    <<: *common-keys-selab
    container_name: docs
    build:
      context: ./documentation
      dockerfile: Dockerfile
    ports:
      - 4000:4000
  frontend:
    <<: *common-keys-selab
    container_name: frontend
    build: 
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - 8080:80
    depends_on:
      - backend
    volumes:
      - /etc/letsencrypt/:/etc/letsencrypt/:rw
  backend:
    <<: *common-keys-selab
    container_name: backend
    command: ["python", "__main__.py"]
    depends_on:
      - database
    build: 
      context: ./backend
      dockerfile: Dockerfile
    volumes:
      - ./backend/UPLOAD_FOLDER/:/UPLOAD_FOLDER/:rw
    ports:
      - 5000:5000
  database:
    <<: *common-keys-selab
    image: postgres:14-alpine
    container_name: database
    ports:
      - 5432:5432
    volumes:
      - ./postgres-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_DB=${POSTGRES_DB}


